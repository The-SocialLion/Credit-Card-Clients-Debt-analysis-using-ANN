# -*- coding: utf-8 -*-
"""CCD.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hGQDemJfsgv4BD0hfVN7xbhIPEaWP79X
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf
import zipfile

zip = zipfile.ZipFile('archive (1).zip')
zip.extractall()

df=pd.read_csv('default of credit card clients.csv')
df=df.dropna(how='any')
df=df.drop(columns=['ID'])
df

X=df.iloc[:,:-1].values
y=df.iloc[:,-1].values

y=y.reshape(len(y),1)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

ann = tf.keras.models.Sequential()
ann.add(tf.keras.layers.Dense(units=500,activation='relu'))
ann.add(tf.keras.layers.Dense(units=1000,activation='relu'))
ann.add(tf.keras.layers.Dense(units=1500,activation='relu'))
ann.add(tf.keras.layers.Dense(units=2000,activation='relu'))
ann.add(tf.keras.layers.Dense(units=1,activation='sigmoid'))

ann.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
history = ann.fit(X_train, y_train, batch_size=1500, epochs=100, validation_data=(X_test, y_test))
ann.save("CCD.h5")

plt.figure(0)
plt.plot(history.history['accuracy'], label='training accuracy')
plt.plot(history.history['val_accuracy'], label='val accuracy')
plt.title('Accuracy')
plt.xlabel('epochs')
plt.ylabel('accuracy')
plt.legend()
plt.savefig('Accuracy.png')

plt.figure(1)
plt.plot(history.history['loss'], label='training loss')
plt.plot(history.history['val_loss'], label='val loss')
plt.title('Loss')
plt.xlabel('epochs')
plt.ylabel('loss')
plt.legend()
plt.savefig('Loss.png')
print("Saved Model & Graph to disk")

model = tf.keras.models.load_model('CCD.h5')
print("Loaded model from disk")

res = model.predict(X_test)
res=np.round(res)
np.set_printoptions(precision=2)
print(res)

from sklearn.metrics import accuracy_score
print("Accuracy Score for the algorithm=>{}%".format(round(accuracy_score(y_test,res)*100),2))